{"version":3,"sources":["hooks/firebase.js","hooks/index.js","context/index.js","components/layout/Steppers.jsx","components/layout/ButtonUI.jsx","helper/index.js","components/layout/MISkillsSheet.jsx","components/Notetaking.js","other/audio.mp3","other/pin.svg","components/SliderBar.js","components/AudioReview.js","components/VonageVideoAPIIntegration.js","components/Transcription.js","components/layout/DisscussionPrep.jsx","components/Store.js","components/VideoChatComponent.js","components/layout/PracticeSession.jsx","components/DissResponse.js","components/layout/Collaboration.jsx","components/layout/Modules.jsx","components/layout/Content.jsx","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","usePins","useState","pins","setPins","useEffect","unsubscribe","firestore","collection","orderBy","onSnapshot","snapshot","allPins","docs","map","pin","data","docId","id","JSON","stringify","ActiveStepContext","createContext","ActiveStepProvider","children","curActiveStep","setCurActiveStep","Provider","value","useActiveStepValue","useContext","PinsContext","PinsProvider","SessionContext","SessionProvider","setApiKey","sessionId","setSessionId","token","setToken","useColorlibStepIconStyles","makeStyles","root","backgroundColor","zIndex","color","width","height","display","borderRadius","justifyContent","alignItems","active","boxShadow","completed","space","marginTop","ColorlibStepIcon","props","classes","icons","1","2","3","4","5","6","className","clsx","String","icon","ColorlibConnector","withStyles","alternativeLabel","top","line","border","StepConnector","Steppers","activeStep","Stepper","connector","label","Step","StepLabel","StepIconComponent","useStyles","theme","button","marginRight","spacing","instructions","marginBottom","ButtonUI","setActiveStep","React","open","setOpen","handleClose","Box","align","m","Button","variant","disabled","onClick","prevActiveStep","length","Dialog","onClose","aria-labelledby","aria-describedby","DialogActions","formatTime","time","hrs","mins","secs","ret","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","join","MISkillsSheet","skillInfoOpened","setSkillInfoOpened","DialogTitle","margin","padding","closeButton","position","right","palette","grey","other","disableTypography","Typography","IconButton","aria-label","textAlign","fontSize","fontWeight","Link","href","DialogContent","dividers","overflow","component","mb","Grid","item","xs","List","dense","ListItem","ListItemIcon","style","minWidth","ListItemText","primary","Divider","light","pt","Notetaking","curPinIndex","noteValueRef","useRef","perspectiveValueRef","skillValueRef","pinType","setPinType","curNoteInfo","setCurNoteInfo","curPerspectiveInfo","setCurPerspectiveInfo","curSkillInfo","setCurSkillInfo","fetchCurTextVal","infoName","a","doc","pinTime","docRef","infos","split","get","then","exists","console","log","catch","error","handlePinInfo","input","usersUpdate","update","sm","Paper","fontStyle","TextField","fullWidth","multiline","rows","inputRef","onChange","current","my","ToggleButtonGroup","exclusive","event","newPinType","size","ToggleButton","selected","SliderBar","maxValue","pinMarks","curValue","canClick","pinMarkList","setPinMarkList","PrettoSlider","marginLeft","thumb","valueLabel","left","track","rail","mark","markLabel","Slider","tempList","Container","valueLabelDisplay","defaultValue","min","max","marks","valueLabelFormat","session","publisher","subscriber","imageIcon","iconRoot","fab","AudioReview","setCurPinIndex","player","pinID","pinBtnDisabled","setPinBtnDisabled","pinBtnColor","setPinBtnColor","audioLen","setAudioLen","audioProgress","setAudioProgress","playTimeArr","handleLastPin","index","seekTo","parseFloat","handleNextPin","remove","addPin","curTime","setTimeout","set","pinInfos","dummyPlayTimeArr","sort","b","indexOf","deletePin","delete","ref","url","audio","controls","onDuration","duration","onSeek","e","round","getCurrentTime","Fab","handlePin","CircularProgress","Icon","src","alt","Transcription","flexGrow","background","paper","DisscussionPrep","container","HANDLE_SUBSCRIPTION","handleSubscription","payload","type","rootReducer","combineReducers","videoChat","state","isStreamSubscribed","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","handleError","alert","message","VideoChatComponent","isInterviewStarted","setIsInterviewStarted","isAudioEnabled","setIsAudioEnabled","isVideoEnabled","setIsVideoEnabled","isAudioSubscribed","setIsAudioSubscribed","isVideoSubscribed","setIsVideoSubscribed","setIsStreamSubscribed","isSubscribed","useSelector","OT","initSession","initPublisher","insertMode","buttonDisplayMode","on","subscribe","stream","dispatch","connect","publish","unpublish","onToggleAudio","publishAudio","onToggleVideo","publishVideo","onToggleAudioSubscription","subscribeToAudio","onToggleVideoSubscription","subscribeToVideo","renderToolbar","Tooltip","title","fetchServerRes","baseURL","fetch","res","json","PracticeSession","room","newAlignment","Collaboration","setPlayTimeArr","DissResponse","getStepContent","step","Modules","Content","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa9518a8.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport \"firebase/firestore\";\n\nconst firebaseConfig = firebase.initializeApp({\n    apiKey: \"AIzaSyBIuy2AyZ1BbeWsIdXBWPVHbZOOLUKlo4g\",\n    authDomain: \"pin-mi-e430d.firebaseapp.com\",\n    projectId: \"pin-mi-e430d\",\n    storageBucket: \"pin-mi-e430d.appspot.com\",\n    messagingSenderId: \"31998012275\",\n    appId: \"1:31998012275:web:fc8cd7078523c457c63306\",\n    measurementId: \"G-CBF7TZ5DF5\"\n});\n\nexport { firebaseConfig as firebase };","import { firebase } from \"../hooks/firebase\";\nimport { useState, useEffect } from 'react';\n\nexport const usePins = () => {\n    const [pins, setPins] = useState([]);\n  \n    useEffect(() => {\n      let unsubscribe = firebase\n        .firestore()\n        .collection(\"Pins\")\n        .orderBy(\"pinTime\")\n\n        // console.log(\"get data from firebase\");\n        unsubscribe = unsubscribe.onSnapshot((snapshot) => {\n          const allPins = snapshot.docs.map((pin) => ({\n            ...pin.data(),\n            docId: pin.id,\n            }));\n          if (JSON.stringify(allPins) !== JSON.stringify(pins)) {\n            setPins(allPins);\n          }\n        });\n        return () => {\n          unsubscribe();\n        }\n    }, [pins]);\n  \n    return { pins, setPins };\n};","import React, { useState, createContext, useContext } from \"react\";\nimport { usePins } from '../hooks/index';\n\nexport const ActiveStepContext = createContext();\nexport const ActiveStepProvider = ({children}) => {\n    const [curActiveStep, setCurActiveStep] = useState(0);\n\n    return  (\n        <ActiveStepContext.Provider value = {{curActiveStep, setCurActiveStep}}>\n            {children}\n        </ActiveStepContext.Provider>\n    )\n}\nexport const useActiveStepValue = () => useContext(ActiveStepContext);\n\n\nexport const PinsContext = createContext();\nexport const PinsProvider = ({ children }) => {\n  const { pins, setPins } = usePins();\n  return (\n    <PinsContext.Provider value={{ pins, setPins }}>\n      {children}\n    </PinsContext.Provider>\n  );\n};\nexport const usePinsValue = () => useContext(PinsContext);\n\nexport const SessionContext = createContext();\nexport const SessionProvider = ({ children }) => {\n  const [apiKey, setApiKey] = useState(\"YOUR_API_KEY\");\n  const [sessionId, setSessionId] = useState(\"YOUR_SESSION_ID\");\n  const [token, setToken] = useState(\"YOUR_TOKEN\");\n  return (\n    <SessionContext.Provider value={[apiKey, setApiKey, sessionId, setSessionId, token, setToken]}>\n      {children}\n    </SessionContext.Provider>\n  );\n};\nexport const useSessionValue = () => useContext(SessionContext);\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {Step, StepConnector, Stepper, StepLabel} from '@material-ui/core';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\n// icons import\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\nimport CreateIcon from '@material-ui/icons/Create';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport PersonIcon from '@material-ui/icons/Person';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport DoneIcon from '@material-ui/icons/Done';\n// context\nimport { useActiveStepValue } from \"../../context\";\n\n\n\nconst useColorlibStepIconStyles = makeStyles({\n    root: {\n        backgroundColor: '#DDEEF9',\n        zIndex: 1,\n        color: '#fff',\n        width: 50,\n        height: 50,\n        display: 'flex',\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    active: {\n        backgroundColor:\n        '#FC6D78',\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n    },\n    completed: {\n        backgroundColor:\n        '#FDA2A9',\n    },\n    space: {\n        marginTop: 100,\n    }\n});\n\nfunction ColorlibStepIcon(props) {\n    const classes = useColorlibStepIconStyles();\n    const { active, completed } = props;\n    \n    const icons = {\n        1: <RefreshIcon />,\n        2: <VoiceChatIcon />,\n        3: <CreateIcon />,\n        4: <QuestionAnswerIcon />,\n        5: <PersonIcon />,\n        6: <DoneIcon />\n    };\n    \n    return (\n        <div\n        className={clsx(classes.root, {\n            [classes.active]: active,\n            [classes.completed]: completed,\n        })}\n        >\n        {icons[String(props.icon)]}\n        </div>\n    );\n    }\n\nColorlibStepIcon.propTypes = {\n            /**\n             * Whether this step is active.\n             */\n            active: PropTypes.bool,\n            /**\n             * Mark the step as completed. Is passed to child components.\n             */\n            completed: PropTypes.bool,\n            /**\n             * The label displayed in the step icon.\n             */\n            icon: PropTypes.node,\n    };\n\nconst ColorlibConnector = withStyles({\n    alternativeLabel: {\n      top: 22,\n    },\n    active: {\n      '& $line': {\n        backgroundColor:\n        '#FC6D78',\n        \n      },\n    },\n    completed: {\n      '& $line': {\n        backgroundColor:\n        '#FDA2A9',\n      },\n    },\n    line: {\n      height: 3,\n      border: 0,\n      backgroundColor: '#DDEEF9',\n      borderRadius: 1,\n    },\n  })(StepConnector);\n\nconst Steppers = () => {\n    const steps = ['MI Refresher', 'Practice Session', 'Discussion Prep', 'Collaborative Discussion', 'Self-Reflection', 'Complete'];\n    const {curActiveStep: activeStep} = useActiveStepValue();\n\n    return (\n        <div>\n            <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n            {steps.map((label) => (\n                <Step key={label}>\n                <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n                </Step>\n            ))}\n            </Stepper>\n        </div>\n    );\n}\n \nexport default Steppers;","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Box, Button, Dialog, DialogActions, DialogTitle} from '@material-ui/core';\n// context\nimport { useActiveStepValue } from \"../../context\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n}));\n\nconst ButtonUI = () => {    \n    const {curActiveStep: activeStep, setCurActiveStep: setActiveStep} = useActiveStepValue();\n\n    const classes = useStyles();\n\n    const steps = ['MI Refresher', 'Practice Session', 'Discussion Prep', 'Collaborative Discussion', 'Self-Reflection', 'Complete'];\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n    };\n    \n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n    \n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n    return (\n        <div>\n            <Box align=\"center\" m = {2}>  \n                <div>\n                    <Button \n                        variant=\"contained\"\n                        disabled={activeStep === 0} \n                        onClick={handleBack} \n                        className={classes.button}>\n                        Back\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleClickOpen}\n                        className={classes.button}\n                    >\n                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                    </Button>\n                    <Dialog\n                        open={open}\n                        onClose={handleClose}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to go to next session?\"}</DialogTitle>\n                        <DialogActions>\n                            <Button \n                                variant=\"contained\" \n                                onClick={handleClose} \n                            >\n                                Cancel\n                            </Button>\n                            <Button \n                                variant=\"contained\" \n                                onClick={() => { handleNext(); handleClose();}} \n                                color=\"primary\" \n                            >\n                                Confirm\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            </Box>\n        </div>\n    );\n};\n\nexport default ButtonUI;","export const formatTime = (time) => {   \n    // Hours, minutes and seconds\n    var hrs = ~~(time / 3600);\n    var mins = ~~((time % 3600) / 60);\n    var secs = ~~time % 60;\n\n    // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n    var ret = \"\";\n    if (hrs > 0) {\n        ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n    }\n    ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n    ret += \"\" + secs;\n    return ret;\n};\n\nexport const generatePushId = (() => {\n    const PUSH_CHARS =\n      \"-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\";\n  \n    const lastRandChars = [];\n  \n    return function () {\n      let now = new Date().getTime();\n  \n      const timeStampChars = new Array(8);\n      for (var i = 7; i >= 0; i--) {\n        timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n        now = Math.floor(now / 64);\n      }\n  \n      let id = timeStampChars.join(\"\");\n  \n      for (i = 0; i < 12; i++) {\n        id += PUSH_CHARS.charAt(lastRandChars[i]);\n      }\n  \n      return id;\n    };\n  })();","import React from 'react';\nimport {Box, Grid, Link, Dialog, DialogContent, Typography, IconButton, List, ListItem, ListItemText, ListItemIcon, Divider} from '@material-ui/core';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nconst MISkillsSheet = () => {\n\n    const [skillInfoOpened, setSkillInfoOpened] = React.useState(false);\n\n    const styles = (theme) => ({\n        root: {\n          margin: 0,\n          padding: theme.spacing(2),\n        },\n        closeButton: {\n          position: 'absolute',\n          right: theme.spacing(1),\n          top: theme.spacing(1),\n          color: theme.palette.grey[500],\n        },\n      });\n\n    const DialogTitle = withStyles(styles)((props) => {\n        const { children, classes, onClose, ...other } = props;\n        return (\n          <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n              <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                <CloseIcon />\n              </IconButton>\n            ) : null}\n          </MuiDialogTitle>\n        );\n    });\n\n    const handleClose = () => {\n        setSkillInfoOpened(false);\n    };\n\n    const handleClickOpen = () => {\n        setSkillInfoOpened(true);\n    };\n\n    return (\n        <div>\n            <Box textAlign=\"left\" fontSize={18} fontWeight=\"fontWeightMedium\" m={2}> \n                What   \n                <Link href=\"#\" onClick={() => {handleClickOpen()}}>\n                    {\" MI skills \"}\n                </Link>\n                were used here? \n            </Box>   \n            <Dialog onClose={handleClose} open={skillInfoOpened}>\n                <DialogTitle onClose={handleClose} align=\"center\">\n                    <Box fontWeight=\"fontWeightBold\"> What are the four core MI skills? </Box>\n                </DialogTitle>\n                <DialogContent dividers>\n                    <Box m={0.5} height={500} overflow=\"auto\">\n                    <Typography component=\"div\">\n                        <Box fontWeight=\"fontWeightRegular\" m={1} mb = {2} >\n                            OARS is a skills-based, client-centered model of interactive techniques. \n                            Using these skills will help establish and maintain rapport with your client, \n                            assess your client’s needs, and personalize your counseling and education responses.   \n                        </Box>\n                        <Box fontWeight=\"fontWeightBold\"  fontSize= {16}>\n                            Open-ended questions\n                        </Box>\n                        <Grid item xs={12}>\n                            <div >\n                                <List dense={true}>\n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Establish a safe environment and help to build rapport and a trusting and respectful professional relationship.\"}\n                                    />\n                                    </ListItem>\n                                    <ListItem >\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Explore, clarify and gain an understanding of your client’s world.\"}\n                                    />\n                                    </ListItem>                                            \n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Learn about your client’s experiences, thoughts, feelings, beliefs, and hopes for the future.\"}\n                                    />\n                                    </ListItem>\n                                </List>\n                            </div>\n                        </Grid>                                \n                        <Box fontWeight=\"fontWeightBold\"  fontSize= {14} >\n                            You may ask:\n                        </Box>\n                        <Grid item xs={12}>\n                            <div >\n                                <List dense={true}>\n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"What... brings you to the clinic today?\"}\n                                    />\n                                    </ListItem>\n                                    <ListItem >\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"When... if ever, might you want to be a parent?\"}\n                                    />\n                                    </ListItem>                                            \n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Where... will you get the support you need?\"}\n                                    />\n                                    </ListItem>\n                                </List>\n                            </div>\n                        </Grid>    \n                        <Divider light = {true} />\n                        <Box fontWeight=\"fontWeightBold\"  fontSize= {16} pt = {3}>\n                            Affirmations\n                        </Box>\n                        <Grid item xs={12}>\n                            <div >\n                                <List dense={true}>\n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Build rapport, demonstrate empathy, and affirm your client’s strengths and abilities.\"}\n                                    />\n                                    </ListItem>\n                                    <ListItem >\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Build on your client’s level of self-efficacy and share a belief that they can be responsible for their own decisions and life choices.\"}\n                                    />\n                                    </ListItem>       \n                                </List>\n                            </div>\n                        </Grid>   \n                        <Box fontWeight=\"fontWeightBold\"  fontSize= {14} >\n                            You may ask:\n                        </Box>\n                        <Grid item xs={12}>\n                            <div >\n                                <List dense={true}>\n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"It’s great that you are here today. It’s not always easy...\"}\n                                    />\n                                    </ListItem>\n                                    <ListItem >\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"It sounds like you’ve been really thoughtful about your decision.\"}\n                                    />\n                                    </ListItem>                                            \n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"You’re really trying hard to...\"}\n                                    />\n                                    </ListItem>\n                                </List>\n                            </div>\n                        </Grid>  \n                        <Divider light = {true} />\n                        <Box fontWeight=\"fontWeightBold\"  fontSize= {16} pt = {3}>\n                            Reflective Listening\n                        </Box>\n                        <Grid item xs={12}>\n                            <div >\n                                <List dense={true}>\n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Listen to your client to help you gain a deeper understanding of their life.\"}\n                                    />\n                                    </ListItem>\n                                    <ListItem >\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Listen, observe, and share (reflect on) your own perceptions of what your client shares.\"}\n                                    />\n                                    </ListItem>        \n                                </List>\n                            </div>\n                        </Grid> \n                        <Box fontWeight=\"fontWeightBold\"  fontSize= {14} >\n                            You can reflect words, emotions, and/or behaviors:\n                        </Box>\n                        <Grid item xs={12}>\n                            <div >\n                                <List dense={true}>\n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Reflecting words (Some of what I heard you say...)\"}\n                                    />\n                                    </ListItem>\n                                    <ListItem >\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Reflecting emotions (You seem [to be feeling]...)\"}\n                                    />\n                                    </ListItem>                                            \n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Reflecting behavior (I noticed...)\"}\n                                    />\n                                    </ListItem>\n                                </List>\n                            </div>\n                        </Grid>  \n                        <Divider light = {true} />\n                        <Box fontWeight=\"fontWeightBold\"  fontSize= {16} pt = {3}>\n                            Summary\n                        </Box>\n                        <Grid item xs={12}>\n                            <div >\n                                <List dense={true}>\n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Help move the conversation from the beginning, through the middle to closing.\"}\n                                    />\n                                    </ListItem>\n                                    <ListItem >\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Check that you are understanding your client’s goals and preferences.\"}\n                                    />\n                                    </ListItem>                                            \n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"Confirm that your client has an understanding of the key elements of a plan.\"}\n                                    />\n                                    </ListItem>\n                                </List>\n                            </div>\n                        </Grid>                                \n                        <Box fontWeight=\"fontWeightBold\"  fontSize= {14} >\n                            Summarizing can be demonstrated in three ways:\n                        </Box>\n                        <Grid item xs={12}>\n                            <div >\n                                <List dense={true}>\n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"A collective summary (So let’s go over what we have talked about so far.)\"}\n                                    />\n                                    </ListItem>\n                                    <ListItem >\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"A linking summary (A minute ago you said you wanted to talk to your partner... Would you like to talk more about how you might try?)\"}\n                                    />\n                                    </ListItem>                                            \n                                    <ListItem>\n                                    <ListItemIcon style={{minWidth: '25px'}}>\n                                        <FiberManualRecordIcon style={{ fontSize: '50%' }}/>\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\"A transitional summary to close (So you’ve just described your plan. We’re always here to help in any way. What other questions do you have before you leave today?)\"}\n                                    />\n                                    </ListItem>\n                                </List>\n                            </div>\n                        </Grid>    \n                        <Divider light = {true} />\n\n                        <Box fontWeight=\"fontWeightLight\"  fontSize= {14} pt = {3}>\n                            Source: Reproductive Health National Training Center OARS Handout\n                        </Box>\n                    </Typography>\n                    </Box>\n                </DialogContent>\n            </Dialog>\n                    \n        </div>\n    );\n};\n\nexport default MISkillsSheet;","import React, {useState, useRef, useEffect} from 'react';\nimport {formatTime} from '../helper/index';\nimport { Box, Grid, Paper, TextField } from '@material-ui/core';\nimport {ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport MISkillsSheet from './layout/MISkillsSheet';\n\n// firebase hook\nimport { usePins } from '../hooks/index';\nimport { firebase } from \"../hooks/firebase\";\n\nconst Notetaking = ({curPinIndex}) => {    \n    //creating a refernce for TextField Component\n    const noteValueRef = useRef('') \n    const perspectiveValueRef = useRef('')\n    const skillValueRef = useRef('')\n\n    // fetch raw pin data here\n    const { pins } = usePins();\n\n    // set up states for four different questions\n    const [pinType, setPinType] = useState('');\n    const [curNoteInfo, setCurNoteInfo] = useState('');\n    const [curPerspectiveInfo, setCurPerspectiveInfo] = useState('');\n    const [curSkillInfo, setCurSkillInfo] = useState('');\n\n    useEffect(() => {\n        fetchCurTextVal(\"pinInfos.pinNote\");\n        fetchCurTextVal(\"pinInfos.pinPerspective\");\n        fetchCurTextVal(\"pinInfos.pinCategory\");\n        fetchCurTextVal(\"pinInfos.pinSkill\");\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [curPinIndex])\n\n    // for updating and fetching current text field value\n    const fetchCurTextVal = async (infoName) => {\n        const docRef = await firebase.firestore().collection(\"Pins\").doc(formatTime(pins.map(pin => pin.pinTime)[curPinIndex]));\n        const infos = infoName.split(\".\");\n        let curInfo = \"\";\n        const doc = await docRef.get().then((doc) => {\n            if (doc.exists) {\n                curInfo = doc.data()[infos[0]][infos[1]];\n                return curInfo;\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n            }\n        })\n        .catch((error) => {\n            console.log(\"Error getting document:\", error);\n        });\n        if(infoName === \"pinInfos.pinNote\"){\n            setCurNoteInfo(doc);\n        } else if(infoName === \"pinInfos.pinPerspective\"){\n            setCurPerspectiveInfo(doc);\n        } else if(infoName === \"pinInfos.pinCategory\"){\n            setPinType(doc);\n        } else if(infoName === \"pinInfos.pinSkill\"){\n            setCurSkillInfo(doc);\n        } \n    }\n\n    // for pin information modifying\n    const handlePinInfo = (infoName, input) => {\n        if(infoName === \"pinInfos.pinNote\"){\n            setCurNoteInfo(input);\n        } else if(infoName === \"pinInfos.pinPerspective\"){\n            setCurPerspectiveInfo(input);\n        } else if(infoName === \"pinInfos.pinSkill\"){\n            setCurSkillInfo(input);\n        } \n        let usersUpdate = {};\n        usersUpdate[`${infoName}`] = input;\n        firebase\n            .firestore()\n            .collection(\"Pins\")\n            .doc(formatTime(pins.map(pin => pin.pinTime)[curPinIndex]))        \n            .update(usersUpdate)    \n            .then(() => {\n                console.log(\"Document successfully updated!\");\n            })\n            .catch((error) => {\n                // The document probably doesn't exist.\n                console.error(\"Error updating document: \", error);\n            });\n    }\n\n    // for handling pin tyep switching\n    const handlePinType = (event, newPinType) => {\n        setPinType(newPinType);\n        handlePinInfo(\"pinInfos.pinCategory\", newPinType);\n    };  \n\n    return (\n        <Grid item xs={12} sm={8}>\n            <Paper >\n                <Box m={2} height={700} >\n                    <Box fontStyle=\"italic\" fontSize={18}>\n                        The session was pinned at {formatTime(pins.map(pin => pin.pinTime)[curPinIndex])}\n                    </Box>\n                    <Box textAlign=\"left\" fontSize={18} fontWeight=\"fontWeightMedium\" m={2}> \n                        Would you like to take some notes for this pin?\n                    </Box>\n                    <TextField\n                        id=\"outlined-secondary\"\n                        label=\"Personal Notes...\"\n                        fullWidth\n                        variant=\"outlined\"\n                        multiline\n                        rows={3}\n                        margin=\"normal\"\n                        value = {curNoteInfo}\n                        inputRef={noteValueRef}\n                        onChange = {() => handlePinInfo(\"pinInfos.pinNote\", noteValueRef.current.value)}\n                    />\n                    <Box my={1} fontStyle=\"italic\" fontSize={18}> To share with your peer:</Box>\n                    <Box textAlign=\"left\" fontSize={18} fontWeight=\"fontWeightMedium\" m={2}> \n                        What is your perspective of what happened at this pin? \n                    </Box>\n                    <TextField\n                        id=\"outlined-secondary\"\n                        label=\"Type a response...\"\n                        fullWidth\n                        variant=\"outlined\"\n                        multiline\n                        rows={3}\n                        margin=\"normal\"                        \n                        value = {curPerspectiveInfo}\n                        inputRef={perspectiveValueRef}\n                        onChange = {() => handlePinInfo(\"pinInfos.pinPerspective\", perspectiveValueRef.current.value)}\n                    />\n                    <Box textAlign=\"left\" fontSize={18} fontWeight=\"fontWeightMedium\" m={2}> \n                        What would you categorize this pin as?\n                    </Box>       \n                    <Box align=\"left\" m = {3}>          \n                        <ToggleButtonGroup\n                            value={pinType}\n                            exclusive\n                            onChange={handlePinType}\n                            size = \"large\"\n                        >\n                            <ToggleButton value=\"strength\" selected = {pinType === \"strength\"}>\n                                Strength\n                            </ToggleButton>\n                            <ToggleButton value=\"opportunity\" selected = {pinType === \"opportunity\"}>\n                                Opportunity\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Box>   \n                    <MISkillsSheet />\n                    <TextField\n                        id=\"outlined-secondary\"\n                        label=\"Type a response...\"\n                        fullWidth\n                        variant=\"outlined\"\n                        multiline\n                        rows={1}\n                        margin=\"normal\"                        \n                        value = {curSkillInfo}\n                        inputRef={skillValueRef}\n                        onChange = {() => handlePinInfo(\"pinInfos.pinSkill\", skillValueRef.current.value)}\n                    />\n                </Box>\n            </Paper>\n\n        </Grid>\n    );\n};\n\nexport default Notetaking;","export default __webpack_public_path__ + \"static/media/audio.8b79ec3f.mp3\";","export default __webpack_public_path__ + \"static/media/pin.e9019ecc.svg\";","import React, {useState, useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Slider from \"@material-ui/core/Slider\";\nimport { Container, Button } from '@material-ui/core';\nimport { formatTime } from '../helper/index'\n\nimport './SliderBar.css';\n\nexport default function SliderBar({maxValue, pinMarks, curValue, canClick}) {\n  const [pinMarkList, setPinMarkList] = useState([]);\n  \n  const PrettoSlider = withStyles({\n    root: {\n      color: '#52af77',\n      height: 8,    \n      marginTop: 20,\n      width: 990,\n      marginLeft: 105,            \n      '&.Mui-disabled': {\n        color: '#52af77',\n      },\n    },    \n    thumb: {\n      height: 24,\n      width: 24,\n      backgroundColor: '#fff',\n      border: '2px solid currentColor',\n      marginTop: -18,\n      marginLeft: -12,\n      '&:focus, &:hover, &$active': {\n        boxShadow: 'inherit',\n      },      \n      '&.Mui-disabled': {\n        height: 24,\n        width: 24,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        marginTop: -18,\n        marginLeft: -12,\n      },\n    },\n    active: {},\n    valueLabel: {\n      left: 'calc(-50% + 4px)',\n    },\n    track: {\n      marginTop: -8,\n      height: 5,\n      borderRadius: 0.5,\n    },\n    rail: {\n      marginTop: -8,\n      height: 5,\n      borderRadius: 0.5,\n    },\n    mark: {\n        backgroundColor: '#bfbfbf',\n        height: 15,\n        width: 8,\n        marginTop: -10,\n        marginLeft: -3,\n      },    \n\n    markLabel: {\n      marginTop: -10,\n      color: '#111111',\n    },\n\n  })(Slider);\n\n  useEffect(() => {\n    let tempList = [];\n    for (let i = 0; i < pinMarks.length; i++) {\n      tempList[i] = {\"value\":pinMarks[i], \"label\":formatTime(pinMarks[i])};\n    }\n    setPinMarkList(tempList); \n  },[pinMarks]);\n\n  return (\n    <Container className = \"SliderbarContext\">     \n        <PrettoSlider className = \"SliderbarOverlay\"\n            valueLabelDisplay=\"on\" \n            aria-label=\"pretto slider\" \n            defaultValue={0} \n            value={curValue}                \n            min={0}\n            max={maxValue}\n            marks={pinMarkList} \n            valueLabelFormat = {(value) => formatTime(value)}\n            disabled = {true}\n        />\n    </Container>\n  );\n}","import React, { useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Paper, Icon, Fab, CircularProgress } from '@material-ui/core';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport ReactPlayer from 'react-player';\nimport audio from '../other/audio.mp3';\nimport pin from '../other/pin.svg';\nimport {formatTime, generatePushId} from '../helper/index';\n\nimport SliderBar from './SliderBar';\n\n// context\nimport { useActiveStepValue } from \"../context\";\n\n// firebase hook\nimport { usePins } from '../hooks/index';\nimport { firebase } from \"../hooks/firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n          margin: theme.spacing(1),\n        },\n      },\n    imageIcon: {\n        height: '100%'\n    },\n    iconRoot: {\n        textAlign: 'center'\n    },\n    fab: {\n        marginLeft: 500,\n    },    \n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(5),\n    },\n}));\n\nconst AudioReview = ({curPinIndex, setCurPinIndex}) => {\n    const classes = useStyles();\n    const player = useRef(null);\n    const {curActiveStep} = useActiveStepValue();\n    // fetch raw pin data here\n    const { pins, setPins } = usePins();\n    // get document ID\n    const pinID = generatePushId();\n\n    const [pinBtnDisabled, setPinBtnDisabled] = useState(false); \n    const [pinBtnColor, setPinBtnColor] = useState(\"\");   \n    const [audioLen, setAudioLen] = useState(100);\n    const [audioProgress, setAudioProgress] = useState(0);\n    \n    let playTimeArr = pins.map(pin => pin.pinTime);\n\n    const handleLastPin = (index) => {   \n        if(curPinIndex > 0){\n            setCurPinIndex(index);\n            player.current.seekTo(parseFloat(pins.map(pin => pin.pinTime)[index]));\n        }\n    };\n\n    const handleNextPin = (index, remove = false) => {\n        if(curPinIndex < pins.map(pin => pin.pinTime).length - 1){\n            if(!remove){\n                player.current.seekTo(parseFloat(pins.map(pin => pin.pinTime)[index]));\n                setCurPinIndex(index);\n            } else{                \n                player.current.seekTo(parseFloat(pins.map(pin => pin.pinTime)[index]));\n                setCurPinIndex(index - 1);\n            }\n        }\n    };\n\n    const addPin = async (curTime) => {\n        // ui on\n        setPinBtnDisabled(true);\n        setPinBtnColor(\"primary\");\n        // ui off\n        setTimeout(() => {\n            setPinBtnDisabled(false);\n        }, 800);\n\n        await firebase.firestore().collection(\"Pins\").doc(formatTime(curTime)).set({\n            pinID,\n            pinTime: curTime,\n            pinInfos: {\"pinNote\": \"\", \"pinPerspective\": \"\", \"pinCategory\": \"\", \"pinSkill\": \"\"}\n        })        \n        .then( () => {\n            setPins([...pins, ]);\n        })\n        .then(() => {\n            console.log(\"Document successfully written!\");    \n        })\n        .catch((error) => {\n            console.error(\"Error writing document: \", error);\n        });  \n        console.log(\"finished writing\")      \n        console.log(curTime); \n        //seek to\n        let dummyPlayTimeArr = [...pins, {\n            pinID,\n            pinTime: curTime,\n            pinInfos: {\"pinNote\": \"\", \"pinPerspective\": \"\", \"pinCategory\": \"\", \"pinSkill\": \"\"}\n        }].sort((a, b) => a.pinTime - b.pinTime);\n\n        setCurPinIndex(dummyPlayTimeArr.map(pin => pin.pinTime).indexOf(curTime));   \n    }\n\n    const deletePin = async (docId) => {\n        firebase\n          .firestore()\n          .collection(\"Pins\")\n          .doc(docId)\n          .delete()\n          .then(() => {\n            setPins([...pins]);\n        })\n        .then(() => {\n            console.log(\"Document successfully deleted!\");\n        })\n        .catch((error) => {\n            console.error(\"Error writing document: \", error);\n        });\n        // ui on\n        setPinBtnDisabled(true);\n        setPinBtnColor(\"secondary\");\n        // ui off\n        setTimeout(() => {\n            setPinBtnDisabled(false);\n        }, 800);\n    };\n\n    const handlePin = () => {\n        const curTime = Math.round(player.current.getCurrentTime());\n        let index = playTimeArr.indexOf(curTime);\n        if (pins.map(pin => pin.pinTime).indexOf(curTime) !== -1) {\n            // remove current pin\n            deletePin(pins.map(pin => pin.docId)[index]);\n            // auto jump to next available pin point\n            console.log(pins.length);\n            if(pins.map(pin => pin.pinTime).length === 0) {\n                player.current.seekTo(parseFloat(0));\n            }\n            else if(pins.map(pin => pin.pinTime).length === 2){\n                curPinIndex === 0 ? \n                player.current.seekTo(parseFloat(pins.map(pin => pin.pinTime)[1])) : \n                handleLastPin(curPinIndex - 1)\n            }\n            else{\n                curPinIndex === pins.map(pin => pin.pinTime).length - 1 || \n                curPinIndex === pins.map(pin => pin.pinTime).length ? \n                handleLastPin(curPinIndex - 1) : \n                handleNextPin(curPinIndex + 1, true);\n            }\n        } else {\n            // add current playtime as a new pin and seek to it\n            addPin(curTime);\n        }\n    };\n\n    return (\n        <Grid item xs={12}>\n            { curActiveStep === 2 ? \n            (\n                <Typography variant='h6'>Listen back to your audio recording with pins and take notes to discuss with your peer. \n                </Typography> \n            ) \n            : \n            (\n                <Typography variant='h6'>Review all pins with your peer, User Name...\n                </Typography> \n            ) \n            }\n            <Paper variant='outlined' style={{ padding: 10, marginTop: 10 }}>         \n                <SliderBar \n                    maxValue = {audioLen} \n                    curValue = {audioProgress} \n                    pinMarks = {pins.map(pin => pin.pinTime)}\n                    canClick = {pinBtnDisabled}\n                />\n                <ReactPlayer\n                    ref={player}\n                    url={audio}\n                    controls = {true}\n                    width=\"100%\"\n                    height=\"55px\"\n                    style={{ marginBottom: 8 }}\n                    onDuration={(duration) => setAudioLen (duration)}\n                    onSeek={(e) => {\n                        setAudioProgress(e); \n                        const curTime = Math.round(player.current.getCurrentTime());\n                        let index = playTimeArr.indexOf(curTime);\n                        if(index != -1){\n                            setCurPinIndex(index);\n                            player.current.seekTo(parseFloat(pins.map(pin => pin.pinTime)[index]));\n                        }\n                    }}\n                />\n                <div className={classes.root} >\n                    <Fab color=\"default\" aria-label=\"last\" className={classes.fab} \n                         onClick={() => handleLastPin(curPinIndex - 1)} >\n                        <NavigateBeforeIcon />\n                    </Fab>\n                    <Fab color=\"default\" aria-label=\"addPin\"\n                          onClick={() => handlePin()} disabled = {pinBtnDisabled}>\n                        {pinBtnDisabled \n                        ? \n                        <CircularProgress color={pinBtnColor} /> \n                        :                         \n                        <Icon classes={{ root: classes.iconRoot }}>\n                            <img className={classes.imageIcon} src={pin} alt=\"\" />\n                        </Icon>   \n                        }\n                    </Fab>\n                    <Fab color=\"default\" aria-label=\"next\" \n                          onClick={() => handleNextPin(curPinIndex + 1)} >\n                        <NavigateNextIcon />    \n                    </Fab>\n                    <Typography>{\"Current Pin Time is: \" + formatTime(pins.map(pin => pin.pinTime)[curPinIndex])}</Typography>\n                    <Typography>{\"New Pins from database: \" + pins.map(pin => formatTime(pin.pinTime))}</Typography>\n                    <Typography>{\"Current pin index: \" + curPinIndex}</Typography>\n                </div>\n            </Paper>\n        </Grid>\n    );\n};\n\nexport default AudioReview;","import { store } from \"./Store\";\nimport { handleSubscription } from \"./Store\";\nimport OT from \"@opentok/client\";\n\nfunction handleError(error) {\n  if (error) {\n    alert(error.message);\n  }\n}\n\nlet session, publisher, subscriber;\n\nexport function initializeSession(apiKey, sessionId, token) {\n  session = OT.initSession(apiKey, sessionId);\n\n  // Create a publisher\n  publisher = OT.initPublisher(\n    \"publisher\",\n    {\n      insertMode: \"append\",\n      style: { buttonDisplayMode: \"off\" },\n      width: \"100%\",\n      height: \"100%\",\n    },\n    handleError\n  );\n\n  // Subscribing to stream\n  session.on(\"streamCreated\", function (event) {\n    subscriber = session.subscribe(\n      event.stream,\n      \"subscriber\",\n      {\n        insertMode: \"append\",\n        style: { buttonDisplayMode: \"off\" },\n        width: \"100%\",\n        height: \"100%\",\n      },\n      handleError\n    );\n    store.dispatch(handleSubscription(true));\n  });\n\n  // Do some action on destroying the stream\n  session.on(\"streamDestroyed\", function (event) {\n    console.log(\"The Video chat has ended\");\n    store.dispatch(handleSubscription(false));\n  });\n\n  // Connect to the session\n  session.connect(token, function (error) {\n    // If the connection is successful, publish to the session\n    if (error) {\n      handleError(error);\n    } else {\n      session.publish(publisher, handleError);\n    }\n  });\n}\n\nexport function stopStreaming() {\n  session && session.unpublish(publisher);\n}\n\n// The following functions are used in functionality customization\nexport function toggleVideo(state) {\n  publisher.publishVideo(state);\n}\nexport function toggleAudio(state) {\n  publisher.publishAudio(state);\n}\nexport function toggleAudioSubscription(state) {\n  subscriber.subscribeToAudio(state);\n}\nexport function toggleVideoSubscription(state) {\n  subscriber.subscribeToVideo(state);\n}\n","import React from 'react';\nimport { Typography, Box, Grid, Paper } from '@material-ui/core';\n\nconst Transcription = () => {\n    // fetch pin data here\n    // todo...\n\n    return (\n        <Grid item xs={12} sm={4}>\n            <Paper>\n                <Box m={2} height={700} overflow=\"auto\">\n                    <Box fontSize={20} fontStyle=\"Normal\" fontWeight=\"fontWeightBold\">\n                        Transcript\n                    </Box>\n                    <Typography component=\"div\" >\n                        <Box fontWeight=\"bold\">0:03</Box>\n                        <Typography> Am I starting now? Um, I guess, should I ask the person to continue thinking out loud? I guess? Yeah, we can share this soon or yeah, you can think out loud for this part too. Okay.\n                        </Typography>\n                        <Box fontWeight=\"bold\" >0:03</Box>\n                        <Typography> Am I starting now? Um, I guess, should I ask the person to continue thinking out loud? I guess? Yeah, we can share this soon or yeah, you can think out loud for this part too. Okay.\n                        </Typography>\n                        <Box fontWeight=\"bold\">0:03</Box>\n                        <Typography> Am I starting now? Um, I guess, should I ask the person to continue thinking out loud? I guess? Yeah, we can share this soon or yeah, you can think out loud for this part too. Okay.\n                        </Typography>\n                        <Box fontWeight=\"bold\">0:03</Box>\n                        <Typography> Am I starting now? Um, I guess, should I ask the person to continue thinking out loud? I guess? Yeah, we can share this soon or yeah, you can think out loud for this part too. Okay.\n                        </Typography>\n                        <Box fontWeight=\"bold\">0:03</Box>\n                        <Typography> Am I starting now? Um, I guess, should I ask the person to continue thinking out loud? I guess? Yeah, we can share this soon or yeah, you can think out loud for this part too. Okay.\n                        </Typography>\n                        <Box fontWeight=\"bold\">0:03</Box>\n                        <Typography> Am I starting now? Um, I guess, should I ask the person to continue thinking out loud? I guess? Yeah, we can share this soon or yeah, you can think out loud for this part too. Okay.\n                        </Typography>\n                    </Typography>\n                </Box>\n            </Paper>\n\n        </Grid>\n    );\n};\n\nexport default Transcription;","import React, {useState} from 'react';\n// Components\nimport Notetaking from '../Notetaking';\nimport AudioReview from '../AudioReview';\nimport Transcription from '../Transcription';\n// Others\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  imageIcon: {\n    height: '100%'\n  },\n  iconRoot: {\n    textAlign: 'center'\n  },\n  fab: {\n    marginLeft: 450,\n    marginRight: 200,\n  }\n}));\n\nconst DisscussionPrep = () => {\n  const classes = useStyles();\n  const [curPinIndex, setCurPinIndex] = useState(-1);\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        <Grid container spacing={2}>\n          <AudioReview \n            curPinIndex = {curPinIndex} \n            setCurPinIndex = {setCurPinIndex}\n          />\n          <Transcription />\n          <Notetaking \n            curPinIndex = {curPinIndex}/>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default DisscussionPrep;","import { createStore, combineReducers } from \"redux\";\n\n// Types\nconst HANDLE_SUBSCRIPTION = \"HANDLE_SUBSCRIPTION\";\n\n// Actions\nexport const handleSubscription = (payload) => ({\n  type: HANDLE_SUBSCRIPTION,\n  payload,\n});\n\n// Reducers\nconst videoReducer = (state = { isStreamSubscribed: false }, action) => {\n  switch (action.type) {\n    case HANDLE_SUBSCRIPTION:\n      return { ...state, isStreamSubscribed: action.payload };\n    default:\n      return state;\n  }\n};\n// Root Reducers\nconst rootReducer = combineReducers({\n  videoChat: videoReducer,\n});\n\n// Store\nexport const store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOff\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { Tooltip, Button } from \"@material-ui/core\";\nimport { apiKey, sessionId, token } from \"./constants\";\nimport {\n  toggleAudio,\n  toggleVideo,\n  toggleAudioSubscription,\n  toggleVideoSubscription,\n  initializeSession,\n  stopStreaming,\n} from \"./VonageVideoAPIIntegration\";\nimport \"./VideoChatComponent.scss\";\n \n\n\n\nfunction VideoChatComponent(props) {\n  const [isInterviewStarted, setIsInterviewStarted] = useState(false);\n  const [isAudioEnabled, setIsAudioEnabled] = useState(true);\n  const [isVideoEnabled, setIsVideoEnabled] = useState(true);\n  const [isAudioSubscribed, setIsAudioSubscribed] = useState(true);\n  const [isVideoSubscribed, setIsVideoSubscribed] = useState(true);\n  const [isStreamSubscribed, setIsStreamSubscribed] = useState(false);\n  const isSubscribed = useSelector(\n    (state) => state.videoChat.isStreamSubscribed\n  );\n\n  useEffect(() => {\n    isInterviewStarted\n      ? initializeSession(props.apiKey, props.sessionId, props.token)\n      : stopStreaming();\n  }, [isInterviewStarted]);\n\n  useEffect(() => {\n    setIsStreamSubscribed(isSubscribed);\n  }, [isSubscribed]);\n\n  const onToggleAudio = (action) => {\n    setIsAudioEnabled(action);\n    toggleAudio(action);\n  };\n  const onToggleVideo = (action) => {\n    setIsVideoEnabled(action);\n    toggleVideo(action);\n  };\n  const onToggleAudioSubscription = (action) => {\n    setIsAudioSubscribed(action);\n    toggleAudioSubscription(action);\n  };\n  const onToggleVideoSubscription = (action) => {\n    setIsVideoSubscribed(action);\n    toggleVideoSubscription(action);\n  };\n\n  const renderToolbar = () => {\n    return (\n      <>\n        {isInterviewStarted && (\n          <div className=\"video-toolbar\">\n            {isAudioEnabled ? (\n              <Tooltip title=\"mic on\">\n                <MicIcon\n                  onClick={() => onToggleAudio(false)}\n                  className=\"on-icon\"\n                />\n              </Tooltip>\n            ) : (\n              <Tooltip title=\"mic off\">\n                <MicOffIcon\n                  onClick={() => onToggleAudio(true)}\n                  className=\"off-icon\"\n                />\n              </Tooltip>\n            )}\n            {isVideoEnabled ? (\n              <Tooltip title=\"camera on\">\n                <VideocamIcon\n                  onClick={() => onToggleVideo(false)}\n                  className=\"on-icon\"\n                />\n              </Tooltip>\n            ) : (\n              <Tooltip title=\"camera off\">\n                <VideocamOffIcon\n                  onClick={() => onToggleVideo(true)}\n                  className=\"off-icon\"\n                />\n              </Tooltip>\n            )}\n\n            {isStreamSubscribed && (\n              <>\n                {isAudioSubscribed ? (\n                  <Tooltip title=\"sound on\">\n                    <VolumeUpIcon\n                      onClick={() => onToggleAudioSubscription(false)}\n                      className=\"on-icon\"\n                    />\n                  </Tooltip>\n                ) : (\n                  <Tooltip title=\"sound off\">\n                    <VolumeOffIcon\n                      onClick={() => onToggleAudioSubscription(true)}\n                      className=\"off-icon\"\n                    />\n                  </Tooltip>\n                )}\n                {isVideoSubscribed ? (\n                  <Tooltip title=\"screen on\">\n                    <VisibilityIcon\n                      onClick={() => onToggleVideoSubscription(false)}\n                      className=\"on-icon\"\n                    />\n                  </Tooltip>\n                ) : (\n                  <Tooltip title=\"screen off\">\n                    <VisibilityOffIcon\n                      onClick={() => onToggleVideoSubscription(true)}\n                      className=\"off-icon\"\n                    />\n                  </Tooltip>\n                )}\n              </>\n            )}\n          </div>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div className='actions-btns'>\n      <Button\n        onClick={() => setIsInterviewStarted(true)}\n        disabled={isInterviewStarted}\n        color='primary'\n        variant=\"contained\"\n      >\n        Start chat\n      </Button>\n      <Button\n        onClick={() => setIsInterviewStarted(false)}\n        disabled={!isInterviewStarted}\n        color='secondary'\n        variant=\"contained\"\n      >\n        Finish chat\n      </Button>\n      </div>\n      <div className=\"video-container\">\n        <div\n          id=\"subscriber\"\n          className={`${\n            isStreamSubscribed ? \"main-video\" : \"additional-video\"\n          }`}\n        >\n          {isStreamSubscribed && renderToolbar()}\n        </div>\n        <div\n          id=\"publisher\"\n          className={`${\n            isStreamSubscribed ? \"additional-video\" : \"main-video\"\n          }`}\n        >\n          {!isStreamSubscribed && renderToolbar()}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default VideoChatComponent;\n","import React, {useState} from 'react';\nimport VideoChatComponent from \"../VideoChatComponent.js\";\n\nconst PracticeSession = () => {\n    const [room, setRoom] = useState(\"hello\");\n    const [baseURL, setBaseURL] = useState('https://pinmi-test.herokuapp.com/room/' + room);\n    const [apiKey, setApiKey] = useState(\"YOUR_API_KEY\");\n    const [sessionId, setSessionId] = useState(\"YOUR_SESSION_ID\");\n    const [token, setToken] = useState(\"YOUR_TOKEN\");\n\n    return (  \n        <div>\n            <h1> Practice Session </h1>\n            <button onClick = \n            {() => {fetchServerRes(setApiKey, setSessionId, setToken, baseURL)}}\n            >Click me for a new session token</button>\n            <h1>apiKeys: {apiKey}</h1>\n            <h1>sessionId: {sessionId}</h1>\n            <h1>token: {token}</h1>\n            \n            <VideoChatComponent apiKey = {apiKey} sessionId = {sessionId} token = {token}/>\n        </div>\n    );\n}\n\nconst fetchServerRes = (setApiKey, setSessionId, setToken, baseURL) => {\n    fetch(baseURL).then(function(res) {\n        return res.json()\n      }).then(function(res) {\n        setApiKey(res.apiKey);\n        setSessionId(res.sessionId);\n        setToken(res.token);\n        //initializeSession();\n      }).catch((error) => {console.log(error)});\n}\n\n\nexport default PracticeSession;","import React from 'react';\nimport {formatTime} from '../helper/index';\nimport {Box, Grid, Paper, TextField } from '@material-ui/core';\nimport {ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n\n\nconst Notetaking = ({curPinIndex, playTimeArr}) => {\n    // fetch pin data here\n    // todo...\n\n    const [pinType, setPinType] = React.useState('');\n\n    const handleAlignment = (event, newAlignment) => {\n        setPinType(newAlignment);\n    };\n\n    return (\n        <Grid item xs={12} sm={8}>\n            <Paper >\n                <Box m={2} height={600}>\n                    <Box fontStyle=\"italic\" fontSize={18}>\n                        The session was pinned at {formatTime(playTimeArr[curPinIndex])}\n                    </Box>\n                    <Box textAlign=\"center\" fontSize={18} fontWeight=\"fontWeightMedium\" m={2}> \n                        Would you like to take some notes for this pin?\n                    </Box>\n                    <TextField\n                        id=\"outlined-secondary\"\n                        label=\"Personal Notes...\"\n                        fullWidth\n                        variant=\"outlined\"\n                        multiline\n                        rows={4}\n                        margin=\"normal\"\n                    />\n                    <Box my={1} fontStyle=\"italic\" fontSize={18}> To share with your peer:</Box>\n                    <Box textAlign=\"center\" fontSize={18} fontWeight=\"fontWeightMedium\" m={2}> \n                        What is your perspective of what happened at this pin? \n                    </Box>\n                    <TextField\n                        id=\"outlined-secondary\"\n                        label=\"Type a response...\"\n                        fullWidth\n                        variant=\"outlined\"\n                        multiline\n                        rows={4}\n                        margin=\"normal\"\n                    />\n                    <Box textAlign=\"center\" fontSize={18} fontWeight=\"fontWeightMedium\" m={2}> \n                        What would you categorize this pin as?\n                    </Box>       \n                    <Box align=\"center\" m = {3}>          \n                        <ToggleButtonGroup\n                            value={pinType}\n                            exclusive\n                            onChange={handleAlignment}\n                            size = \"large\"\n                        >\n                            <ToggleButton value=\"strength\" >\n                                Strength\n                            </ToggleButton>\n                            <ToggleButton value=\"opportunity\">\n                                Opportunity\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Box>   \n                </Box>\n            </Paper>\n\n        </Grid>\n    );\n};\n\nexport default Notetaking;","import React, {useState} from 'react';\n// Components\nimport DissResponse from '../DissResponse';\nimport AudioReview from '../AudioReview';\nimport Transcription from '../Transcription';\n// Others\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  imageIcon: {\n    height: '100%'\n  },\n  iconRoot: {\n    textAlign: 'center'\n  },\n  fab: {\n    marginLeft: 450,\n    marginRight: 200,\n  }\n}));\n\nconst Collaboration = () => {\n  const classes = useStyles();\n  const [curPinIndex, setCurPinIndex] = useState(-1);\n  const [playTimeArr, setPlayTimeArr] = useState([10, 20, 30]);\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        <Grid container spacing={2}>\n          <AudioReview \n            curPinIndex = {curPinIndex} \n            setCurPinIndex = {setCurPinIndex}\n            playTimeArr = {playTimeArr}\n            setPlayTimeArr = {setPlayTimeArr}\n          />\n          <Transcription />\n          <DissResponse \n            curPinIndex = {curPinIndex} \n            setCurPinIndex = {setCurPinIndex}\n            playTimeArr = {playTimeArr}\n            setPlayTimeArr = {setPlayTimeArr}/>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default Collaboration;","import React from 'react';\nimport DisscussionPrep from './DisscussionPrep';\nimport PracticeSession from './PracticeSession';\nimport Collaboration from  './Collaboration';\n// context\nimport { useActiveStepValue } from \"../../context\";\n\nimport { usePins } from '../../hooks/index';\n\nfunction getStepContent(step) {\n    switch (step) {\n      case 0:\n        return <div>refresher</div>;\n      case 1:\n        return <PracticeSession />;\n      case 2:\n        return <DisscussionPrep/> ;\n      case 3:\n        return <Collaboration />;\n      case 4:\n        return <div>reflection</div>;\n      case 5:\n        return <div>complete</div>;\n      default:\n        return <div>Unknown</div>;\n    }\n}\n\nconst Modules = () => {    \n    const {curActiveStep} = useActiveStepValue();\n    const { pins } = usePins();\n    \n    return (  \n        <div>\n            {getStepContent(curActiveStep)}\n        </div>\n    );\n}\n \nexport default Modules;","import React from 'react';\nimport Steppers from './Steppers';\nimport ButtonUI from './ButtonUI';\nimport Modules from './Modules';\n\nconst Content = () => {\n    return (\n        <section>    \n            <Steppers />\n            <Modules />\n            <ButtonUI />\n        </section>\n    );\n};\n\nexport default Content;","import React from 'react';\nimport {ActiveStepProvider, PinsProvider, SessionProvider} from './context/index'\nimport Content from './components/layout/Content';\nimport { Provider } from \"react-redux\";\nimport { store } from \"./components/Store\";\n// import 'default-passive-events';\n/* \"default-passive-events\": \"^2.0.0\", */\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <SessionProvider>\n                <ActiveStepProvider>\n                    <PinsProvider>\n                        <main>\n                            <Content />\n                        </main>\n                    </PinsProvider>\n                </ActiveStepProvider>\n            </SessionProvider>\n        </Provider>\n    )\n}\n\nexport default App;","import React from 'react';\nimport { render } from \"react-dom\";\nimport App from './App';\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}